separate_rows(name, sep = "-")
View(new)
print(new, n = 20)
breakerofchains:::break_chain()
breakerofchains:::break_chain()
print(new, n = 25)
dat
penguins
dat1 <- tibble(id = letters[1:6], gender = sample(c("M", "F", 6, TRUE)))
dat1 <- tibble(id = letters[1:6], gender = sample(c("M", "F"), 6, TRUE)))
dat1 <- tibble(id = letters[1:6], gender = sample(c("M", "F"), 6, TRUE))
dat1
age <- tibble(id = letters[1:6], age = runif(6, min = 150, max = 190)
age
age
age <- tibble(id = letters[1:6], age = runif(6, min = 150, max = 190)
age <- tibble(id = letters[1:6], age = runif(6, min = 150, max = 190))
age
gender <- tibble(id = letters[1:6], gender = sample(c("M", "F"), 6, TRUE))
age_cm <- tibble(id = letters[1:6], age = runif(6, min = 150, max = 190))
bmi <- tibble(id = letters[1:6], bmi = runif(6, min = 15, max = 40))
bmi
gender <- tibble(id = letters[1:6], gender = sample(c("M", "F"), 6, TRUE))
gender
age_cm <- tibble(id = letters[1:6], age = runif(6, min = 150, max = 190))
age_cm
bmi <- tibble(id = letters[1:6], bmi = runif(6, min = 15, max = 40))
bmi
l <- list(gender, age_cm, bmi)
l |> reduce(left_join, by = "i")
l |> reduce(left_join, by = "id")
regimen <- LETTERS[1:5]
gender <- c("M", "F")
crossing(regimen, gender)
color <- c("red", "green", "blue")
crossing(regimen, gender, color)
print(dat, n = 30)
dat <- crossing(regimen, gender, color)
print(dat, n = 30)
expand.grid(regimen, gender, color)
dat1 <- crossing(regimen, gender)
print(dat1)
# Base version
expand.grid(regimen, gender)
library(epiR)
install.packages("epiR")
library(tidyverse)
library(palmerpenguins)
library(epiR)
install.packages("medicaldata")
library(medicaldata)
dat <- medicaldata::esoph_ca
dat
# epiR package
data_table <- table(dat$agegp, dat$alcgp)
data_table
dat <- medicaldata::cytomegalovirus
glimpse(dat)
# epiR package
data_table <- table(dat$sex, dat$cmv)
data_table
dat1 <- dat |>
mutate(
sex = factor(sex, levels = c(0, 1), labels = c("Female", "Male")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
dat1 <- dat |>
mutate(
sex = factor(sex, levels = c(0, 1), labels = c("Female", "Male")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
data_table <- table(dat$sex, dat$cmv)
data_table
dat1 <- dat |>
mutate(
sex = factor(sex, levels = c(0, 1), labels = c("Female", "Male")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
data_table <- table(dat1$sex, dat1$cmv)
(data_table <- table(dat1$sex, dat1$cmv))
dat1 <- dat |>
mutate(
sex = factor(sex, levels = c(0, 1), labels = c("Female", "Male")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
attr(dat1, "label") <- "Sex"
(data_table <- table(dat1$sex, dat1$cmv))
epi.2by2(data_table)
dat1 <- dat |>
mutate(
sex = factor(sex, levels = c(1, 0), labels = c("Male", "Female")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
glimpse(data)
glimpse(dat)
dat1 <- dat |>
mutate(
rad = factor(prior.radiation, levels = c(0, 1), labels = c("No", "Yes")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
dat1 <- dat |>
mutate(
rad = factor(prior.radiation, levels = c(0, 1), labels = c("No", "Yes")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
(data_table <- table(dat1$rad, dat1$rad))
epi.2by2(data_table)
dat |> count(prior.transplant)
dat1 <- dat |>
mutate(
tp = factor(prior.transplant, levels = c(0, 1), labels = c("No", "Yes")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
(data_table <- table(dat1$rad, dat1$rad))
dat1 <- dat |>
mutate(
tp = factor(prior.transplant, levels = c(0, 1), labels = c("No", "Yes")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
(data_table <- table(dat1$tp, dat1$rad))
dat1 <- dat |>
mutate(
tp = factor(prior.transplant, levels = c(0, 1), labels = c("No", "Yes")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
dat1 <- dat |>
mutate(
tp = factor(prior.transplant, levels = c(0, 1), labels = c("No", "Yes")),
cmv = factor(cmv, levels = c(0, 1), labels = c("No", "Yes"))
)
(data_table <- table(dat1$tp, dat1$cmv))
epi.2by2(data_table)
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant),
if_else(prior.transplant == 0, 2, prior.transplant))
)
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant),
if_else(~ . == 0, 2, .))
)
dat <- medicaldata::cytomegalovirus
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant),
if_else(~ . == 0, 2, .))
)
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant),
if_else(~ . == 0, 2L, .))
)
glimpse(dat)
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant), if_else(~ . == 0, 2, .))
)
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant), ~ if_else(. == 0, 2, .))
)
dat1
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant), ~ if_else(. == 0, 2, .)),
)
(data_table <- table(dat1$tp, dat1$cmv))
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant), ~ if_else(. == 0, 2, .))
)
dat1 <- dat |>
mutate(
across(c(cmv, prior.transplant), ~ if_else(. == 0, 2, .))
) |>
rename(tp = prior.transplant)
(data_table <- table(dat1$tp, dat1$cmv))
(data_table <- table(dat1$tp, dat1$cmv))
epi.2by2(data_table)
res <- epi.2by2(data_table)
res
summary(res)
res_sum <- summary(res)
res_sum
res_sum$massoc.summary
dat1 |>
select(tp, cm) |>
table() |>
epi.2by2()
breakerofchains:::break_chain()
breakerofchains:::break_chain()
breakerofchains:::break_chain()
dat1 |>
select(tp, cmv) |>
table() |>
epi.2by2() |>
tidy()
library(broom)
dat1 |>
select(tp, cmv) |>
table() |>
epi.2by2() |>
tidy()
dat1 |>
select(tp, cmv) |>
table() |>
epi.2by2() |>
tidy() |>
filter(str_detect(term, "^RR"))
res_sum
res_sum$RR.strata.wald
res_sum <- summary(res)
res_sum$massoc.detail$RR.strata.wald
dat1 |>
select(tp, cmv) |>
table() |>
epi.2by2() |>
tidy() |>
filter(str_detect(term, "^RR"))
dat1 |>
select(tp, cmv) |>
table()
data_table <- dat1 |>
select(tp, cmv) |>
table()
data_table
breakerofchains:::break_chain()
breakerofchains:::break_chain()
dat <- medicaldata::esoph_ca
View(dat)
dat |> count(agegp)
dat <- medicaldata::esoph_ca
dat_count <- dat |>
count(agegp)
dat_count
ggplot(dat, aes(x = n, y = agegp)) +
geom_col() +
theme_light()
dat_count <- dat |>
count(agegp)
dat_count
ggplot(dat, aes(x = n, y = agegp)) +
geom_col() +
theme_light()
dat_count
ggplot(dat_count, aes(x = n, y = agegp)) +
geom_col() +
theme_light()
breakerofchains:::break_chain()
glimpse(dat)
data()
flights
ggplot2::mpg
ggplot2::mpg |> count(manufacturer)
dat <- ggplot2::mpg
glimpse(dat)
dat |> count(manufacturer)
dat_count
dat_count <- dat1 |>
count(manu)
dat_count <- dat1 |>
count(manu)
ggplot(dat_count, aes(x = n, y = manu)) +
geom_col() +
theme_light()
dat <- ggplot2::mpg
glimpse(dat)
dat |> count(manufacturer)
dat1 <- dat |>
mutate(manu = factor(manufacturer))
dat_count <- dat1 |>
count(manu)
ggplot(dat_count, aes(x = n, y = manu)) +
geom_col() +
theme_light()
dat1 <- dat |>
mutate(
manu = factor(manufacturer),
)
dat1
dat1 <- dat |>
mutate(
manu = factor(manufacturer),
manu = fct_lump_n(manu, 5)
)
dat2 <- dat |>
mutate(
manu = factor(manufacturer),
manu = fct_lump_n(manu, 5)
)
dat_count <- dat2 |>
count(manu)
dat_count
ggplot(dat_count, aes(x = n, y = manu)) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = fct_reorder(manu, n))) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = manu)) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = fct_reorder(manu, n, desc = TRUE))) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = fct_reorder(manu, n, .desc = TRUE))) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = fct_reorder(manu, n))) +
geom_col() +
theme_light()
usethis::use_git_ignore()
usethis::use_git_ignore(".")
penguins |> count(is.na(sex))
:w
penguins |> count(miss = is.na(sex))
penguins |> count(is.na(sex))
dat <- ggplot2::mpg
glimpse(dat)
dat |> count(manufacturer)
dat <- ggplot2::mpg |>
rename(manu = manufacturer)
glimpse(dat)
dat |> count(manufacturer)
dat |> count(manu)
dat_count <- dat |>
count(manu)
dat_count
ggplot(dat_count, aes(x = n, y = manu)) +
geom_col() +
theme_light()
dat1 <- dat |>
mutate(
manu = factor(manufacturer),
manu = fct_lump_n(manu, 5)
)
dat1 <- dat |>
mutate(
manu = factor(manufacturer),
manu = fct_lump_n(manu, 5)
)
dat_count <- dat1 |>
count(manu)
dat1 <- dat |>
mutate(
manu = factor(manu),
manu = fct_lump_n(manu, 5)
)
dat1 <- dat |>
mutate(
manu = factor(manu),
manu = fct_lump_n(manu, 5)
)
dat_count <- dat1 |>
count(manu)
ggplot(dat_count, aes(x = n, y = manu)) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = fct_reorder(manu, n))) +
geom_col() +
theme_light()
ggplot(dat_count, aes(x = n, y = fct_reorder(manu, n, .desc = TRUE))) +
geom_col() +
theme_light()
num <- 1:3
names(num) <- c("a", "b", "c")
dat <- enframe(num)
dat
dat <- mtcars
dat
?mtcars
postal_df <- data.frame(
State = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico",
"New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"),
PostalCode = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
"HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
"MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ",
"NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD",
"TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
)
postal_df
states <- data.frame(
State = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico",
"New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"),
PostalCode = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
"HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
"MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ",
"NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD",
"TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
)
dat <- sample(states$PostalCode, 10)
dat
#Dataframe 1
dat1 <- tibble(
district = c("Aberdeen City", "Aberdeenshire",
"Abertawe - Swansea", "Adur District", "Allerdale District (B)",
"Amber Valley District (B)", "Angus", "Argyll and Bute", "Arun District",
"Ashfield District", "Ashford District (B)", "Babergh District",
"Barking and Dagenham London Boro", "Barnet London Boro", "Barnsley District (B)",
"Barrow-in-Furness District (B)", "Basildon District (B)",
"Basingstoke and Deane District (B)",
"Bassetlaw District", "Bath and North East Somerset", "Bedford (B)",
"Bexley London Boro", "Birmingham District (B)", "Blaby District",
"Blackburn with Darwen (B)", "Blackpool (B)", "Blaenau Gwent - Blaenau Gwent",
"Bolsover District", "Bolton District (B)", "Boston District (B)",
"Bournemouth, Christchurch and Poole", "Bracknell Forest (B)",
"Bradford District (B)", "Braintree District", "Breckland District",
"Brent London Boro", "Brentwood District (B)",
"Bro Morgannwg - the Vale of Glamorgan",
"Broadland District", "Bromley London Boro"),
pop = c(8L,  2L, 14L, 14L, 14L, 14L, 3L, 5L, 14L, 14L, 14L, 14L, 14L, 14L,
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L,
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L)
)
dat1 <- tibble(
district = c("Adur", "Allerdale", "Amber Valley",
"Arun", "Ashfield", "Ashford", "Babergh", "Barking and Dagenham",
"Barnet", "Barnsley", "Barrow-in-Furness", "Basildon", "Basingstoke and Deane",
"Bassetlaw", "Bath and North East Somerset", "Bedford", "Bexley",
"Birmingham", "Blaby", "Blackburn with Darwen", "Blackpool",
"Blaenau Gwent", "Bolsover", "Bolton", "Boston",
"Bournemouth, Christchurch and Poole",
"Bracknell Forest", "Bradford", "Braintree", "Breckland", "Brent",
"Brentwood", "Bridgend", "Brighton and Hove", "Bristol, City of",
"Broadland", "Bromley", "Bromsgrove", "Broxbourne", "Broxtowe"
),
pop = c(63869, 97527, 126678, 159827, 127151,
129281, 91401, 211998, 392140, 245199, 67137, 185862, 175729,
116839, 192106, 171623, 247258, 1141374, 100421, 148942, 139305,
69713, 79530, 285372, 69366, 395784, 121676, 537173, 151561,
139329, 330795, 76550, 144876, 290395, 463405, 129464, 331096,
98662, 96876, 113272)
)
breakerofchains:::break_chain()
library(fuzzyjoin)
breakerofchains:::break_chain()
dat1 <- tibble(
district = c("Aberdeen City", "Aberdeenshire",
"Abertawe - Swansea", "Adur District", "Allerdale District (B)",
"Amber Valley District (B)", "Angus", "Argyll and Bute", "Arun District",
"Ashfield District", "Ashford District (B)", "Babergh District",
"Barking and Dagenham London Boro", "Barnet London Boro", "Barnsley District (B)",
"Barrow-in-Furness District (B)", "Basildon District (B)",
"Basingstoke and Deane District (B)",
"Bassetlaw District", "Bath and North East Somerset", "Bedford (B)",
"Bexley London Boro", "Birmingham District (B)", "Blaby District",
"Blackburn with Darwen (B)", "Blackpool (B)", "Blaenau Gwent - Blaenau Gwent",
"Bolsover District", "Bolton District (B)", "Boston District (B)",
"Bournemouth, Christchurch and Poole", "Bracknell Forest (B)",
"Bradford District (B)", "Braintree District", "Breckland District",
"Brent London Boro", "Brentwood District (B)",
"Bro Morgannwg - the Vale of Glamorgan",
"Broadland District", "Bromley London Boro"),
pop1 = c(8L,  2L, 14L, 14L, 14L, 14L, 3L, 5L, 14L, 14L, 14L, 14L, 14L, 14L,
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L,
14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L)
)
dat2 <- tibble(
district = c("Adur", "Allerdale", "Amber Valley",
"Arun", "Ashfield", "Ashford", "Babergh", "Barking and Dagenham",
"Barnet", "Barnsley", "Barrow-in-Furness", "Basildon", "Basingstoke and Deane",
"Bassetlaw", "Bath and North East Somerset", "Bedford", "Bexley",
"Birmingham", "Blaby", "Blackburn with Darwen", "Blackpool",
"Blaenau Gwent", "Bolsover", "Bolton", "Boston",
"Bournemouth, Christchurch and Poole",
"Bracknell Forest", "Bradford", "Braintree", "Breckland", "Brent",
"Brentwood", "Bridgend", "Brighton and Hove", "Bristol, City of",
"Broadland", "Bromley", "Bromsgrove", "Broxbourne", "Broxtowe"
),
pop2 = c(63869, 97527, 126678, 159827, 127151,
129281, 91401, 211998, 392140, 245199, 67137, 185862, 175729,
116839, 192106, 171623, 247258, 1141374, 100421, 148942, 139305,
69713, 79530, 285372, 69366, 395784, 121676, 537173, 151561,
139329, 330795, 76550, 144876, 290395, 463405, 129464, 331096,
98662, 96876, 113272)
)
breakerofchains:::break_chain()
breakerofchains:::break_chain()
breakerofchains:::break_chain()
breakerofchains:::break_chain()
breakerofchains:::break_chain()
breakerofchains:::break_chain()
dat_join <- stringdist_full_join(
dat1, dat2,
by = "district",
method = "jw", distance_col = "dist"
) |>
arrange(district.x, dist) |>
group_by(district.x) |>
slice(1) |>
ungroup() |>
mutate(district.y = if_else(dist < 0.25, district.y, NA_character_))
distance_join_df
dat_join
View(dat_join)
