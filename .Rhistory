library(tidyverse)
data
data()
who
View(who)
names(who)
?who
library(penguin)
library(palmerpenguins)
install.packages("palmerpenguins")
library(tidyverse)
library(palmerpenguins)
reduce(1:4, `+`)
reduce(1:4, "+")
?`+`
`+`(1, 2)
reduce(1:4, +)
reduce(1:4, `+`)
enframe(1:4)
names(num) <- c("a", "b", "c", "d")
num <- 1:4
names(num) <- c("a", "b", "c", "d")
num
enframe(num, name = "letter", value = "number")
library(tidyverse)
library(tidyverse)
library(palmerpenguins)
l <- list(dat1, dat2, dat3)
names(l) <- names(c("mtcars", "iris", "penguins"))
# Creating a list column
dat1 <- mtcars
dat2 <- iris
dat3 <- penguins
l <- list(dat1, dat2, dat3)
names(l) <- names(c("mtcars", "iris", "penguins"))
l
l
names(l) <- names(c("mtcars", "iris", "penguins"))
l
names(l) <- c("mtcars", "iris", "penguins")
l
dat_l <- enframe(l, name = "data_name", "dataset")
dat_l
l1 <- list(a = 1:4, b = 2:5)
l2 <- list(c = c("a", "b"), d = c("a", "b", "c"))
l2
l1
dat_l <- enframe(l, name = "lname", value = "lists")
dat_l
l1 <- list(a = 1:4, b = 2:5)
l2 <- list(c = c("a", "b"), d = c("a", "b", "c"))
l <- list(l1, l2)
dat_l <- enframe(l, name = "lname", value = "lists")
dat_l
names(l) <- c("mylist1", "mylist2")
dat_l <- enframe(l, name = "lname", value = "lists")
dat_l
l1 <- list(a = 1:4, b = 2:5)
l2 <- list(c = c("a", "b"), d = c("a", "b", "c"))
l <- list(l1, l2)
names(l) <- c("mylist1", "mylist2")
dat_l <- enframe(l, name = "lname", value = "lists")
dat_l
View(dat_l)
View(dat_l[[2]][[1]])
dat_l |> pull(lists)
deframe(dat_l)
dat1 <- mtcars
dat2 <- iris
dat3 <- penguins
l <- list(dat1, dat2, dat3)
names(l) <- c("mtcars", "iris", "penguins")
dat_l <- enframe(l, name = "data_name", "dataset")
dat_l
View(dat_l)
deframe(dat_l)
View(dat_l[[2]][[1]])
dat_l
dat_l |>
select(dataset, data_name) |> deframe()
dat_l |>
select(dataset, data_name) |> deframe() |>
names()
breakerofchains:::break_chain()
View(penguins)
penguins |> count(species, island)
count(penguins, year)
penguins |>
select(bill_length_mm, bill_depth_mm, body_mass_g) |>
map(summarise)
penguins |>
select(bill_length_mm, bill_depth_mm, body_mass_g) |>
map(summary)
dat <- penguins |>
select(bill_length_mm, bill_depth_mm, body_mass_g) |>
map(summary)
dat
dat |> class()
dat |> class()
length(dat)
enframe(dat)
enframe(dat) |>
rowwise() |>
mutate(min = value[Min])
enframe(dat) |>
rowwise() |>
mutate(min = value["Min."])
breakerofchains:::break_chain()
library(tidyverse)
library(palmerpenguins)
breakerofchains:::break_chain()
penguins |>
group_by(species) |>
summarise(n = n(), .groups = "drop")
iris
who
iris
penguins
penguins |>
count(species)
penguins |>
group_by(species) |>
summarise(n = n(),
total_weight = sum(flipper_length_mm, na.rm = TRUE)
.groups = "drop")
penguins |>
group_by(species) |>
summarise(n = n(),
total_weight = sum(flipper_length_mm, na.rm = TRUE),
.groups = "drop")
penguins |>
group_by(species) |>
summarise(total_weight = sum(flipper_length_mm, na.rm = TRUE),
.groups = "drop")
penguins |> count(species, wt = body_mass_g)
penguins |>
group_by(species) |>
summarise(total_weight = sum(, na.rm = TRUE),
.groups = "drop")
species
breakerofchains:::break_chain()
breakerofchains:::break_chain()
penguins |>
group_by(species) |>
summarise(total_weight = sum(body_mass_g, na.rm = TRUE),
.groups = "drop")
penguins |>
group_by(species) |>
summarise(total_weight = sum(body_mass_g, na.rm = TRUE),
.groups = "drop")
penguins |> count(species)
